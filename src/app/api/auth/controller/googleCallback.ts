import { z } from "zod";
import { GoogleAuthError } from "@/app/api/errors";
import { cookies } from "next/headers";
import useCase from "@/app/api/auth/useCase";

const schema = z.object({
  code: z.string().nullable(),
  state: z.string().nullable(),
});

export async function googleCallback(input: z.infer<typeof schema>) {
  const code = input.code;
  const state = input.state;

  // Generated by google sign in initial route
  const storedState = cookies().get("google_oauth_state")?.value ?? null;
  const codeVerifier = cookies().get("google_code_verifier")?.value ?? null;

  if (!code || !state || !storedState || state !== storedState || !codeVerifier)
    throw new GoogleAuthError("Google sign in setup error");

  const data = {
    code: code,
    verifier: codeVerifier,
  };

  const { cookie, ...result } = await useCase.processGoogleSignIn(data);

  cookies().set(cookie.name, cookie.value, cookie.attributes);

  return result;
}
